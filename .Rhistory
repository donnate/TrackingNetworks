}
deg <- colSums(as.matrix(A))
deg
def_edge_set<-function(A){
B=which(upper.tri(A)>0, arr.ind = TRUE)
B<-cbind(B, apply(B,1,FUN=function(x){ return(A[x[1], x[2]])}))
return(B)
}
weight_nodes<-function(A){
deg <- colSums(data.matrix(A))
weight=matrix(0, ncol(A))
for (i in 1:ncol(A)){
weight[i]=1/deg[i]*sum(deg[which(A[i,]>0)])
}
return(weight)
}
weight_n <- weight_nodes(A)
e=def_edge_set(A)
weight_e=e[,3]
list=1:ncol(A)
ind <- seq(1,length(weight_e),1)
FR_w <- sapply(ind,FR_curve,e,list,weight_e,weight_n)
FR_w2 <- as.numeric(FR_w)
weight_e
FR_w2[which(is.na(FR_w2))] <- 0
FR_w2 <- abs(FR_w2)/max(abs(FR_w2)) # normalize curvature
null <- which(FR_w2 == 0)
weight_e2 <- weight_e + 0.5*FR_w2
weight_e <- weight_e2/max(weight_e2) # renormalize
hist(weight_e-e[,3])
e[,3]
png(file="weight_e_it3.png",width=640,height=480)
hist(weight_e,xlab="edge weights (it=3)",ylab="distribution",
breaks=150,xlim=c(0,1),
main=" ",
col="gray64",prob=T,
#ylim=c(0,10000),
cex.lab=1.5,cex.axis=1.5,bty='n')
#d <- density(FR_w)
#lines(d$x,d$y*0.6, col="red",lty="dotted",
#lwd=4)
dev.off()
png(file="weight_e_it3.png",width=640,height=480)
hist(weight_e,xlab="edge weights (it=3)",ylab="distribution",
breaks=150,xlim=c(0,1),
main=" ",
col="gray64",prob=T,
#ylim=c(0,10000),
cex.lab=1.5,cex.axis=1.5,bty='n')
#d <- density(FR_w)
#lines(d$x,d$y*0.6, col="red",lty="dotted",
#lwd=4)
dev.off()
png(file="weight_e_it3.png",width=640,height=480)
hist(weight_e,xlab="edge weights (it=3)",ylab="distribution",
breaks=150,xlim=c(0,1),
main=" ",
col="gray64",prob=T,
#ylim=c(0,10000),
cex.lab=1.5,cex.axis=1.5,bty='n')
d <- density(FR_w)
lines(d$x,d$y*0.6, col="red",lty="dotted",
lwd=4)
dev.off()
hist(weight_e,xlab="edge weights (it=3)",ylab="distribution",
+      breaks=150,xlim=c(0,1),
+      main=" ",
+      col="gray64",prob=T,
+      #ylim=c(0,10000),
+      cex.lab=1.5,cex.axis=1.5,bty='n')
hist(weight_e,xlab="edge weights (it=3)",ylab="distribution",
breaks=150,xlim=c(0,1),
main=" ",
col="gray64",prob=T,
#ylim=c(0,10000),
cex.lab=1.5,cex.axis=1.5,bty='n')
d <- density(FR_w)
lines(d$x,d$y*0.6, col="red",lty="dotted",
lwd=4)
e[,3]=weight_e
write.table('/Users/cdonnat/Archives/data_bis/weighted_edges.csv',e)
write.table(e,file='/Users/cdonnat/Archives/data_bis/weighted_edges.csv')
write.table(e,file='/Users/cdonnat/Archive/data_bis/weighted_edges.csv')
write.table(e,file='/Users/cdonnat/Dropbox/Archive/data_bis/weighted_edges.csv')
write.table(e,file='/Users/cdonnat/Dropbox/Archive/data_bis/weighted_edges.txt', row.names = F, col.names = F,sep = ' ')
write.table(cbind(1:N,deg),file='/Users/cdonnat/Dropbox/Archive/data_bis/weighted_nodes.txt', row.names = F, col.names = F,sep = ' ')
write.table(cbind(1:ncol(A),deg),file='/Users/cdonnat/Dropbox/Archive/data_bis/weighted_nodes.txt', row.names = F, col.names = F,sep = ' ')
A=matrix(0, ncol(G[[k]]), ncol(G[[k]]))
for ( i in 1:ncol(G[[k]])){
for ( j in 1:ncol(G[[k]])){
A[i,j]=as.numeric(as.character(G[[k]][i,j]))
}
}
net <- make_net
deg <- colSums(as.matrix(A))
edge_matrix=c()
def_edge_set<-function(A){
B=which(upper.tri(A)>0, arr.ind = TRUE)
B<-cbind(B, apply(B,1,FUN=function(x){ return(A[x[1], x[2]])}))
return(B)
}
weight_nodes<-function(A){
deg <- colSums(data.matrix(A))
weight=matrix(0, ncol(A))
for (i in 1:ncol(A)){
weight[i]=1/deg[i]*sum(deg[which(A[i,]>0)])
}
return(weight)
}
weight_n <- weight_nodes(A)
e=def_edge_set(A)
weight_e=e[,3]
list=1:ncol(A)
# FR-curvature weighted
# given: {data,list,weight_e,weight_n}
ind <- seq(1,length(weight_e),1)
FR_w <- sapply(ind,FR_curve,e,list,weight_e,weight_n)
FR_w2 <- as.numeric(FR_w)
FR_w2[which(is.na(FR_w2))] <- 0
FR_w2 <- abs(FR_w2)/max(abs(FR_w2)) # normalize curvature
null <- which(FR_w2 == 0)
weight_e2 <- weight_e + 0.5*FR_w2
weight_e <- weight_e2/max(weight_e2) # renormalize
write.table('/Users/cdonnat/Archives/data_bis/weighted_edges.csv',cbind(e,weight_e))
write.table(cbind(1:ncol(A),deg),file='/Users/cdonnat/Dropbox/Archive/data_bis/weighted_nodes.txt', row.names = F, col.names = F,sep = ' ')
write.table(file='/Users/cdonnat/Archives/data_bis/weighted_edges.csv',cbind(e,weight_e))
write.table(cbind(e,weight_e),file='/Users/cdonnat/Dropbox/Archives/data_bis/weighted_edges.csv')
write.table(cbind(e,weight_e),file='/Users/cdonnat/Dropbox/Archive/data_bis/weighted_edges.csv')
data_edge=cbind(e,weight_e)
data_edge<-rbind(c('Source','Target','Weight','Initial'),data_edge)
View(data_edge)
e[,3]=e[,3]/max(e[,3])
data_edge=cbind(e,weight_e)
data_edge<-rbind(c('Source','Target','Weight','Initial'),data_edge)
write.table(data_edge,file='/Users/cdonnat/Dropbox/Archive/data_bis/weighted_edges.txt')
write.table(cbind(1:ncol(A),deg),file='/Users/cdonnat/Dropbox/Archive/data_bis/weighted_nodes.txt', row.names = F, col.names = F,sep = ' ')
write.table(data_edge,file='/Users/cdonnat/Dropbox/Archive/data_bis/weighted_edges.txt', row.names = F, col.names = F,sep = ' ')
write.table(cbind(1:ncol(A),deg),file='/Users/cdonnat/Dropbox/Archive/data_bis/weighted_nodes.txt', row.names = F, col.names = F,sep = ' ')
write.table(data_edge,file='/Users/cdonnat/Dropbox/Archive/data_bis/weighted_edges.txt', row.names = F, col.names = F,sep = ' ')
write.table(rbind(c("Id","Weight"),cbind(1:ncol(A),deg)),file='/Users/cdonnat/Dropbox/Archive/data_bis/weighted_nodes.txt', row.names = F, col.names = F,sep = ' ')
weight_n <- weight_nodes(A)
e=def_edge_set(A)
weight_e=e[,3]
list=1:ncol(A)
# FR-curvature weighted
# given: {data,list,weight_e,weight_n}
ind <- seq(1,length(weight_e),1)
B=10
diff=matrix(0,B)
B=10
diff=matrix(0,B)
for (b in 1:B){
weight_e_0<-weight_e
FR_w <- sapply(ind,FR_curve,e,list,weight_e,weight_n)
FR_w2 <- as.numeric(FR_w)
# remove overflows
FR_w2[which(is.na(FR_w2))] <- 0
FR_w2 <- abs(FR_w2)/max(abs(FR_w2)) # normalize curvature
null <- which(FR_w2 == 0)
print(null)
# update data
# FR_w2 <- FR_w2[-null]
# FR_w <- FR_w[-null]
# weight_e <- weight_e[-null]
# e <- e[-null,]
# update edge weights | node weights constant
weight_e2 <- weight_e + 0.5*FR_w2
weight_e <- weight_e2/max(weight_e2) # renormalize
diff[b]=sum((weight_e-weight_e_0)^2)
}
plot(diff)
plot(diff[2:9,])
testy=vrbind(c('Source','Target','WeightInit','WeightFin'),cbind(e,weight_e))
testy=rbind(c('Source','Target','WeightInit','WeightFin'),cbind(e,weight_e))
View(testy)
def_edge_set<-function(A){
B=which(upper.tri(A)>0, arr.ind = TRUE)
B<-cbind(B, apply(B,1,FUN=function(x){ return(A[x[1], x[2]])}))
return(B)
}
weight_nodes<-function(A){
deg <- colSums(data.matrix(A))
weight=matrix(0, ncol(A))
for (i in 1:ncol(A)){
weight[i]=1/deg[i]*sum(deg[which(A[i,]>0)])
}
return(weight)
}
# FR-curvature weighted
# given: {data,list,weight_e,weight_n}
keep_e=list()
B=10
diff=matrix(0,18,B)
for (a in 1:18){
print(a)
A=drop.levels(G[[k]])
A=matrix(0, ncol(G[[k]]), ncol(G[[k]]))
for ( i in 1:ncol(G[[k]])){
for ( j in 1:ncol(G[[k]])){
A[i,j]=as.numeric(as.character(G[[k]][i,j]))
}
}
deg <- colSums(as.matrix(A))
weight_n <- weight_nodes(A)
e=def_edge_set(A)
weight_e=e[,3]
list=1:ncol(A)
ind <- seq(1,length(weight_e),1)
for (b in 1:B){
weight_e_0<-weight_e
FR_w <- sapply(ind,FR_curve,e,list,weight_e,weight_n)
FR_w2 <- as.numeric(FR_w)
# remove overflows
FR_w2[which(is.na(FR_w2))] <- 0
FR_w2 <- abs(FR_w2)/max(abs(FR_w2)) # normalize curvature
null <- which(FR_w2 == 0)
print(null)
# update data
# FR_w2 <- FR_w2[-null]
# FR_w <- FR_w[-null]
# weight_e <- weight_e[-null]
# e <- e[-null,]
# update edge weights | node weights constant
weight_e2 <- weight_e + 0.5*FR_w2
weight_e <- weight_e2/max(weight_e2) # renormalize
diff[a,b]=sum((weight_e-weight_e_0)^2)
}
keep_e[[a]]=rbind(c('Source','Target','WeightInit','WeightFin'),cbind(e,weight_e))
}
# set weight threshold
plot(diff[1,],color=1)
plot(diff[1,],color='red')
plot(diff[1,],c='red')
point(diff[1,]_
plot(1:10,diff[1,])
for (i in 1:18){
point(1:10, diff[2,])
}
plot(1:10,diff[1,])
for (i in 1:18){
points(1:10, diff[2,])
}
plot(1:10,diff[1,])
for (i in 2:18){
points(1:10, diff[i,])
}
diff[i,]
plot(2:10,diff[1,2:10])
for (i in 2:18){
points(2:10, diff[i,2:10])
}
keep_e=list()
B=10
diff=matrix(0,18,B)
for (a in 1:18){
print(a)
k=a
A=drop.levels(G[[k]])
A=matrix(0, ncol(G[[k]]), ncol(G[[k]]))
for ( i in 1:ncol(G[[k]])){
for ( j in 1:ncol(G[[k]])){
A[i,j]=as.numeric(as.character(G[[k]][i,j]))
}
}
deg <- colSums(as.matrix(A))
weight_n <- weight_nodes(A)
e=def_edge_set(A)
weight_e=e[,3]
list=1:ncol(A)
ind <- seq(1,length(weight_e),1)
for (b in 1:B){
weight_e_0<-weight_e
FR_w <- sapply(ind,FR_curve,e,list,weight_e,weight_n)
FR_w2 <- as.numeric(FR_w)
# remove overflows
FR_w2[which(is.na(FR_w2))] <- 0
FR_w2 <- abs(FR_w2)/max(abs(FR_w2)) # normalize curvature
null <- which(FR_w2 == 0)
print(null)
# update data
# FR_w2 <- FR_w2[-null]
# FR_w <- FR_w[-null]
# weight_e <- weight_e[-null]
# e <- e[-null,]
# update edge weights | node weights constant
weight_e2 <- weight_e + 0.5*FR_w2
weight_e <- weight_e2/max(weight_e2) # renormalize
diff[a,b]=sum((weight_e-weight_e_0)^2)
}
keep_e[[a]]=rbind(c('Source','Target','WeightInit','WeightFin'),cbind(e,weight_e))
}
# set weight threshold
plot(2:10,diff[1,2:10])
for (i in 2:18){
points(2:10, diff[i,2:10])
}
#select the colors that will be used
library(RColorBrewer)
#all palette available from RColorBrewer
display.brewer.all()
#we will select the first 4 colors in the Set1 palette
cols<-brewer.pal(n=4,name="Set1")
labels=read.table('/Users/cdonnat/Dropbox/Archive/data_bis/labels.txt')
View(labels)
cols<-brewer.pal(n=18,name="Set1")
cols_t1<-cols[labels[,1]+1]
cols<-brewer.pal(n=9,name="Paired")
cols_t1<-cols[labels[,1]+1]
plot(2:10,diff[1,2:10],col=cols_t1[1],pch=16)
for (i in 2:18){
points(2:10, diff[i,2:10],col=cols_t1[i]%/%2,pch=16)
}
cols_t1[i]%/%2
plot(2:10,diff[1,2:10],col=cols_t1[1],pch=16)
for (i in 2:18){
points(2:10, diff[i,2:10],col=cols_t1[i%/%2],pch=16)
}
plot(2:10,diff[1,2:10],col=cols_t1[1],pch=16,xlabel='Iteration', ylabel='L2 Difference')
for (i in 2:18){
points(2:10, diff[i,2:10],col=cols_t1[i%/%2],pch=16)
}
plot(2:10,diff[1,2:10],col=cols_t1[1],pch=16,xlabel='Iteration', ylabel='L2 Difference')
plot(2:10,diff[1,2:10],col=cols_t1[1],pch=16,xlab='Iteration', ylab='L2 Difference')
for (i in 2:18){
points(2:10, diff[i,2:10],col=cols_t1[i%/%2],pch=16)
}
plot(2:10,diff[1,2:10],col=cols_t1[1],pch=30,xlab='Iteration', ylab='L2 Difference')
for (i in 2:18){
points(2:10, diff[i,2:10],col=cols_t1[i%/%2],pch=30)
}
plot(2:10,diff[1,2:10],col=cols_t1[1],pch=16,s=20,xlab='Iteration', ylab='L2 Difference')
for (i in 2:18){
points(2:10, diff[i,2:10],col=cols_t1[i%/%2],pch=30)
}
plot(2:10,diff[1,2:10],col=cols_t1[1],pch=16,cex=20,xlab='Iteration', ylab='L2 Difference')
for (i in 2:18){
points(2:10, diff[i,2:10],col=cols_t1[i%/%2],pch=30)
}
plot(2:10,diff[1,2:10],col=cols_t1[1],pch=16,cex=10,xlab='Iteration', ylab='L2 Difference')
for (i in 2:18){
points(2:10, diff[i,2:10],col=cols_t1[i%/%2],pch=30)
}
plot(2:10,diff[1,2:10],col=cols_t1[1],pch=16,cex=2,xlab='Iteration', ylab='L2 Difference')
for (i in 2:18){
points(2:10, diff[i,2:10],col=cols_t1[i%/%2],pch=30)
}
plot(2:10,diff[1,2:10],col=cols_t1[1],pch=16,cex=4,xlab='Iteration', ylab='L2 Difference')
for (i in 2:18){
points(2:10, diff[i,2:10],col=cols_t1[i%/%2],pch=30)
}
plot(2:10,diff[1,2:10],col=cols_t1[1],pch=16,cex=3,xlab='Iteration', ylab='L2 Difference')
for (i in 2:18){
points(2:10, diff[i,2:10],col=cols_t1[i%/%2],pch=30, cex=3)
}
plot(2:10,diff[1,2:10],col=cols_t1[1],pch=16,cex=3,xlab='Iteration', ylab='L2 Difference')
for (i in 2:18){
points(2:10, diff[i,2:10],col=cols_t1[i%/%2],pch=16, cex=3)
}
for (i in 1:18){
write.table(paste('/Users/cdonnat/Dropbox/Archive/data_bis/ricci',str(i),'.txt', sep=''))
}
for (i in 1:18){
write.table(paste('/Users/cdonnat/Dropbox/Archive/data_bis/ricci',as.character(i),'.txt', sep=''))
}
keep_e[1]
for (i in 1:18){
write.table(paste('/Users/cdonnat/Dropbox/Archive/data_bis/ricci',as.character(i),'.txt', sep=''),keep_e[1])
}
for (i in 1:18){
write.table(keep_e[1],paste('/Users/cdonnat/Dropbox/Archive/data_bis/ricci',as.character(i),'.txt', sep=''))
}
for (i in 1:18){
write.table(keep_e[1],paste('/Users/cdonnat/Dropbox/Archive/data_bis/ricci',as.character(i),'.txt', sep=''),col.names = F, row.names = F)
}
labels
histogram(e[1][,1])
hist(e[1][,1])
hist(keep_e[1][,1])
hist(keep_e[1])
histogram(e[,1])
hist(e[,1][1:nrow(e),])
hist(keep_e[,1][1:nrow(keep_e),])
hist(keep_e[,1][2:nrow(keep_e),1])
keep_e[1][2:nrow(keep_e),1])
keep_e[1][2:nrow(keep_e),1]
keep_e[1][2:nrow(keep_e[1]),1]
v
nrow(keep_e[1])
nrow(keep_e[[1]])
keep_e[[1]][2:nrow(keep_e[[1]]),1]
keep_e[[1]][2:nrow(keep_e[[1]]),3]
as.numeric(keep_e[[1]][2:nrow(keep_e[[1]]),3])
hist(as.numeric(keep_e[[1]][2:nrow(keep_e[[1]]),3]))
hist(as.numeric(keep_e[[1]][2:nrow(keep_e[[1]]),3]),50)
hist(as.numeric(keep_e[[1]][2:nrow(keep_e[[1]]),3]),50,xlab='edge weight')
hist(as.numeric(keep_e[[1]][2:nrow(keep_e[[1]]),4]),50,xlab='edge weight')
hist(as.numeric(keep_e[[1]][2:nrow(keep_e[[1]]),4]),50,xlab='edge weight',main='Histogram of the edge weights')
hist(as.numeric(keep_e[[1]][2:nrow(keep_e[[1]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',c='red',alpha=0.5)
hist(as.numeric(keep_e[[1]][2:nrow(keep_e[[1]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',c='red',alpha=0.5)
hist(as.numeric(keep_e[[2]][2:nrow(keep_e[[2]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',c='blue',alpha=0.5,add=T)
hist(as.numeric(keep_e[[4]][2:nrow(keep_e[[4]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',c='pink',alpha=0.5,add=T)
hist(as.numeric(keep_e[[5]][2:nrow(keep_e[[5]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',c='purple',alpha=0.5,add=T)
hist(as.numeric(keep_e[[1]][2:nrow(keep_e[[1]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',c='red',alpha=0.5)
hist(as.numeric(keep_e[[2]][2:nrow(keep_e[[2]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',c='blue',alpha=0.5,add=T)
hist(as.numeric(keep_e[[4]][2:nrow(keep_e[[4]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',c='pink',alpha=0.5,add=T)
hist(as.numeric(keep_e[[5]][2:nrow(keep_e[[5]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',c='purple',col=rgb(0,0,1,0.5),add=T)
hist(as.numeric(keep_e[[1]][2:nrow(keep_e[[1]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0,0,1))
hist(as.numeric(keep_e[[2]][2:nrow(keep_e[[2]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0,0.5,1),add=T)
hist(as.numeric(keep_e[[4]][2:nrow(keep_e[[4]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0.5,0.5,0.5),add=T)
hist(as.numeric(keep_e[[5]][2:nrow(keep_e[[5]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0.3,1,0.7),add=T)
keep_e[[4]]
hist(as.numeric(keep_e[[4]][2:nrow(keep_e[[3]]),3]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0.5,0.5,0.5),add=T)
hist(as.numeric(keep_e[[5]][2:nrow(keep_e[[5]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0.3,1,0.7),add=T)
keep_e[[5]]
hist(as.numeric(keep_e[[1]][2:nrow(keep_e[[1]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0,0,1))
hist(as.numeric(keep_e[[2]][2:nrow(keep_e[[2]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0,0.5,1),add=T)
hist(as.numeric(keep_e[[4]][2:nrow(keep_e[[3]]),3]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0.5,0.5,0.5),add=T)
hist(as.numeric(keep_e[[5]][2:nrow(keep_e[[5]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0.3,1,0.7),add=T)
hist(as.numeric(keep_e[[1]][2:nrow(keep_e[[1]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0,0,1))
hist(as.numeric(keep_e[[2]][2:nrow(keep_e[[2]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0,0.5,1),add=T)
hist(as.numeric(keep_e[[4]][2:nrow(keep_e[[3]]),3]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0.5,0.5,0.5),add=T)
hist(as.numeric(keep_e[[5]][2:nrow(keep_e[[5]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0.3,1,0.7),add=T)
hist(as.numeric(keep_e[[1]][2:nrow(keep_e[[1]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0,0,1))
hist(as.numeric(keep_e[[2]][2:nrow(keep_e[[2]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0,0.5,1),add=T)
hist(as.numeric(keep_e[[3]][2:nrow(keep_e[[3]]),3]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0.5,0.5,0.5),add=T)
hist(as.numeric(keep_e[[5]][2:nrow(keep_e[[5]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0.3,1,0.7),add=T)
hist(as.numeric(keep_e[[1]][2:nrow(keep_e[[1]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0,0,1))
hist(as.numeric(keep_e[[2]][2:nrow(keep_e[[2]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0,0.5,1),add=T)
hist(as.numeric(keep_e[[3]][2:nrow(keep_e[[3]]),3]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0.5,0.5,0.5),add=T)
hist(as.numeric(keep_e[[5]][2:nrow(keep_e[[5]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0.3,1,0.7),add=T)
hist(as.numeric(keep_e[[1]][2:nrow(keep_e[[1]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0,0,1))
hist(as.numeric(keep_e[[2]][2:nrow(keep_e[[2]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0,0.5,1),add=T)
hist(as.numeric(keep_e[[3]][2:nrow(keep_e[[3]]),3]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0.5,0.5,0.5),add=T)
#hist(as.numeric(keep_e[[5]][2:nrow(keep_e[[5]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0.3,1,0.7),add=T)
hist(as.numeric(keep_e[[6]][2:nrow(keep_e[[6]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0,0,1))
hist(as.numeric(keep_e[[2]][2:nrow(keep_e[[2]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0,0.5,1),add=T)
hist(as.numeric(keep_e[[3]][2:nrow(keep_e[[3]]),3]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0.5,0.5,0.5),add=T)
hist(as.numeric(keep_e[[5]][2:nrow(keep_e[[5]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0.3,1,0.7),add=T)
hist(as.numeric(keep_e[[6]][2:nrow(keep_e[[6]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0,0,1))
hist(as.numeric(keep_e[[1]][2:nrow(keep_e[[21]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0,0.5,1),add=T)
hist(as.numeric(keep_e[[3]][2:nrow(keep_e[[3]]),3]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0.5,0.5,0.5),add=T)
hist(as.numeric(keep_e[[5]][2:nrow(keep_e[[5]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0.3,1,0.7),add=T)
hist(as.numeric(keep_e[[6]][2:nrow(keep_e[[6]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0,0,1))
hist(as.numeric(keep_e[[1]][2:nrow(keep_e[[1]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0,0.5,1),add=T)
hist(as.numeric(keep_e[[3]][2:nrow(keep_e[[3]]),3]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0.5,0.5,0.5),add=T)
hist(as.numeric(keep_e[[5]][2:nrow(keep_e[[5]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0.3,1,0.7),add=T)
hist(as.numeric(keep_e[[6]][2:nrow(keep_e[[6]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0,0,1))
hist(as.numeric(keep_e[[2]][2:nrow(keep_e[[2]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0,0.5,1),add=T)
hist(as.numeric(keep_e[[1]][2:nrow(keep_e[[1]]),3]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0.5,0.5,0.5),add=T)
hist(as.numeric(keep_e[[5]][2:nrow(keep_e[[5]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0.3,1,0.7),add=T)
hist(as.numeric(keep_e[[5]][2:nrow(keep_e[[5]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0.3,1,0.7),add=T)
hist(as.numeric(keep_e[[5]][2:nrow(keep_e[[5]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0.3,1,0.7))
hist(as.numeric(keep_e[[3]][2:nrow(keep_e[[3]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0.3,1,0.7))
hist(as.numeric(keep_e[[2]][2:nrow(keep_e[[2]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0.3,1,0.7))
hist(as.numeric(keep_e[[1]][2:nrow(keep_e[[1]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0.3,1,0.7))
hist(as.numeric(keep_e[[1]][2:nrow(keep_e[[1]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0,0,1))
hist(as.numeric(keep_e[[2]][2:nrow(keep_e[[2]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0,0.5,1),add=T)
hist(as.numeric(keep_e[[3]][2:nrow(keep_e[[3]]),3]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0.5,0.5,0.5),add=T)
hist(as.numeric(keep_e[[5]][2:nrow(keep_e[[5]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0.3,1,0.7),add=T)
hist(as.numeric(keep_e[[3]][2:nrow(keep_e[[3]]),3]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0.5,0.5,0.5),add=T)
hist(as.numeric(keep_e[[5]][2:nrow(keep_e[[5]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0.3,1,0.7),add=T)
hist(as.numeric(keep_e[[1]][2:nrow(keep_e[[1]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0,0,1))
hist(as.numeric(keep_e[[1]][2:nrow(keep_e[[1]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0,0,1))
hist(as.numeric(keep_e[[1]][2:nrow(keep_e[[1]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0,0,1),add=T)
hist(as.numeric(keep_e[[2]][2:nrow(keep_e[[2]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0,0.5,1),add=T)
hist(as.numeric(keep_e[[3]][2:nrow(keep_e[[3]]),3]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0.5,0.5,0.5),add=T)
hist(as.numeric(keep_e[[1]][2:nrow(keep_e[[1]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0,0,1))
hist(as.numeric(keep_e[[2]][2:nrow(keep_e[[2]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0,0.5,1),add=T)
hist(as.numeric(keep_e[[6]][2:nrow(keep_e[[6]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0.5,0.5,0.5),add=T)
hist(as.numeric(keep_e[[5]][2:nrow(keep_e[[5]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0.3,1,0.7),add=T)
hist(as.numeric(keep_e[[11]][2:nrow(keep_e[[11]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0,0,1))
hist(as.numeric(keep_e[[12]][2:nrow(keep_e[[12]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0,0.5,1),add=T)
hist(as.numeric(keep_e[[13]][2:nrow(keep_e[[13]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0.5,0.5,0.5),add=T)
hist(as.numeric(keep_e[[14]][2:nrow(keep_e[[14]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0.3,1,0.7),add=T)
hist(as.numeric(keep_e[[11]][2:nrow(keep_e[[11]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0,0,1))
hist(as.numeric(keep_e[[12]][2:nrow(keep_e[[12]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0,0.5,1),add=T)
hist(as.numeric(keep_e[[9]][2:nrow(keep_e[[9]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0.5,0.5,0.5),add=T)
hist(as.numeric(keep_e[[11]][2:nrow(keep_e[[11]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0,0,1))
hist(as.numeric(keep_e[[12]][2:nrow(keep_e[[12]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0,0.5,1),add=T)
hist(as.numeric(keep_e[[9]][2:nrow(keep_e[[9]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0.5,0.5,0.5),add=T)
hist(as.numeric(keep_e[[10]][2:nrow(keep_e[[10]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0,0,1))
hist(as.numeric(keep_e[[12]][2:nrow(keep_e[[12]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0,0.5,1),add=T)
hist(as.numeric(keep_e[[9]][2:nrow(keep_e[[9]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0.5,0.5,0.5),add=T)
labels
hist(as.numeric(keep_e[[10]][2:nrow(keep_e[[10]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0,0,1))
hist(as.numeric(keep_e[[12]][2:nrow(keep_e[[12]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0,0.5,1),add=T)
hist(as.numeric(keep_e[[11]][2:nrow(keep_e[[11]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0.5,0.5,0.5),add=T)
hist(as.numeric(keep_e[[10]][2:nrow(keep_e[[10]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0,0,1))
hist(as.numeric(keep_e[[12]][2:nrow(keep_e[[12]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0,0.5,1),add=T)
hist(as.numeric(keep_e[[13]][2:nrow(keep_e[[13]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0.5,0.5,0.5),add=T)
hist(as.numeric(keep_e[[10]][2:nrow(keep_e[[10]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0,0,1))
hist(as.numeric(keep_e[[12]][2:nrow(keep_e[[12]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0,0.5,1),add=T)
hist(as.numeric(keep_e[[14]][2:nrow(keep_e[[14]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0.5,0.5,0.5),add=T)
hist(as.numeric(keep_e[[10]][2:nrow(keep_e[[10]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0,0,1))
hist(as.numeric(keep_e[[12]][2:nrow(keep_e[[12]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0,0.5,1),add=T)
hist(as.numeric(keep_e[[14]][2:nrow(keep_e[[14]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0.5,0.5,0.5),add=T)
hist(as.numeric(keep_e[[15]][2:nrow(keep_e[[15]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0,0,1))
hist(as.numeric(keep_e[[16]][2:nrow(keep_e[[16]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0,0.5,1),add=T)
hist(as.numeric(keep_e[[17]][2:nrow(keep_e[[17]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0.5,0.5,0.5),add=T)
hist(as.numeric(keep_e[[15]][2:nrow(keep_e[[15]]),4]),50,xlab='edge weight',main='Histogram of the edge weights',col=rgb(0,0,0,1))
source('~/Dropbox/TrackingNetworkChanges/main_food.R', echo=TRUE)
source('~/Dropbox/TrackingNetworkChanges/main_food.R', echo=TRUE)
getwd()
source('~/Dropbox/TrackingNetworkChanges/main_food.R', echo=TRUE)
source('~/Dropbox/TrackingNetworkChanges/main_food.R', echo=TRUE)
source('~/Dropbox/TrackingNetworkChanges/main_food.R', echo=TRUE)
source('~/Dropbox/TrackingNetworkChanges/main_food.R', echo=TRUE)
source('~/Dropbox/TrackingNetworkChanges/main_food.R', echo=TRUE)
source('~/Dropbox/TrackingNetworkChanges/main_food.R', echo=TRUE)
source('~/Dropbox/TrackingNetworkChanges/main_food.R', echo=TRUE)
source('~/Dropbox/TrackingNetworkChanges/main_food.R', echo=TRUE)
source('~/Dropbox/TrackingNetworkChanges/main_food.R', echo=TRUE)
